CLOSE

;################################################
;
; Define motion for converting required energy from
; a dmm to motions of two mirrors
;
; Original Author: Arvinder Palaha
;
; Defined axes:
;       X (addr 6) = Energy in eV
;
; Macros:
;       COORD = $(COORD) CS number between 2 and 9 (1 is reserved)
;       PLC   = $(PLC) PLC number, should be CS number + 15, i.e. between 17 and 24
;       ZSEP  = $(ZSEP) axis number for z traslation between the 2 mirrors
;       XSEP  = $(XSEP) separation of dcm mirrors along x axis in mm
;       B1    = $(B1) axis number for mirror 1 pitch
;       N     = $(N) bragg reflection order, positive integer, default of 1
;################################################

; set trigonometry calculcations to be done in degrees
i15 = 0

; Change to CS$(COORD)
&$(COORD)

; Set relevant axes to use kinematics
&$(COORD)#S(ZSEP)->I  ; z translation of 2nd mirror
&$(COORD)#S(B1)->I    ; pitch of 1st mirror

; These are set by motor_in_cs.template (from spreadsheet)
#define ZSEPMOVE  P(4700+$(ZSEP))
#define ZSEPMRES  P(4800+$(ZSEP))
#define ZSEPOFF   P(4900+$(ZSEP))
#define B1MOVE    P(4700+$(B1))
#define B1MRES    P(4800+$(B1))
#define B1OFF     P(4900+$(B1))

; The backlash demand in EGU's is set by PROG_CS_motion_backlash.pmc (Q401..408)
; NB Backlash defaults to zero (for use with PROG_CS_motion.pmc)
#define BDSTZSEP Q(400+$(ZSEP))
#define BDSTB1   Q(400+$(B1))
BDSTZSEP=0
BDSTB1=0

; Constants
; Planck's constant = 4.135,667,662 * 10^{-15} eV.s
; speed of light    = 299,792,458,000          mm/s
#define HC            0.00123984193          ; eV.mm

; Q1-9 Kinematic Positions (temporary variables used in kinematic calculations by PMAC)
#define ENERGY      Q7         ; Desired energy, eV

; Q128-199 Forward Kinematic Temporary Variables
; none needed

; Q228-299 Inverse Kinematic Temporary Variables

; Q20-70 EPICS Variables ***HARD CODED!***
#define XSEP        25         ; separation between mirrors along x, mm
#define NBRAGG      1          ; bragg number, should default to 1
#define DSPACING    0.000002   ; d, the line spacing of the diffraction grating on the mirrors, mm

#define B1 = P$(B1)
#define ZSEP = P$(ZSEP)

; Forward Kinematics - calculate energy from bragg angle and z separation
#define B1POS       (B1MRES*B1     + B1OFF)
#define ZSEPPOS     (ZSEPMRES*ZSEP + ZSEPOFF)

OPEN FORWARD
CLEAR
    ENERGY = NBRAGG * HC / (2 * DSPACING * sin(B1POS))
CLOSE

; Inverse Kinematics - calculate required ZSEP (L) and B1 (theta) from Energy
#define B1POS       Q232
#define ZSEPPOS     Q233

OPEN INVERSE
CLEAR
    ; bragg angle (theta) calculated in degrees, with corresponding z translation in mm
    B1POS       = asin((NBRAGG * HC) / (2 * DSPACING * ENERGY))
    ZSEPPOS     = XSEP / tan(2 * B1POS)

    ; bragg angle (theta) calculated in motor counts, along with corresponding z translation 
    P$(B1POS)   = ((B1POS -   B1OFF)   / B1MRES)
    P$(ZSEPPOS) = ((ZSEPPOS - ZSEPOFF) / ZSEPMRES)
CLOSE

; A PLC for position reporting
#define ENERGY      Q87
#define B1POS       (B1MRES   * (m$(B1)62   / (I$(B1)08*32))   + B1OFF)
#define ZSEPPOS     (ZSEPMRES * (m$(ZSEP)62 / (I$(ZSEP)08*32)) + ZSEPOFF)

OPEN PLC $(PLC)
CLEAR
    ADDRESS&$(COORD)
    ENERGY = (NBRAGG * HC) / (2 * DSPACING * sin(B1POS))
    ; if theta or z translation motor did the last move, set demands + readbacks
    if (B1MOVE   = 1)
    or (ZSEPMOVE = 1)
        B1MOVE   = 0
        ZSEPMOVE = 0
        ; set CS axis demand position to CS axis readback position
        ; Q87 is the axis readback position for energy (set to Q7 above)
        ; Q77 is the axis demand position for energy (set to Q7 above)
        Q77 = Q87 
    endif
CLOSE

ENABLE PLC $(PLC)
