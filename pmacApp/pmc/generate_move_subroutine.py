import sys
import os, time
from optparse import OptionParser
try:
    from pkg_resources import require
    require('six')
    require('cothread')
    require('h5py')

    import cothread
    from cothread.catools import *
    import numpy
    from numpy import *

    import h5py
except:
    pass

def generate(value):
    axes = {1: 'A(Q71):(Q91)',
            2: 'B(Q72):(Q92)',
            4: 'C(Q73):(Q93)',
            8: 'U(Q74):(Q94)',
            16: 'V(Q75):(Q95)',
            32: 'W(Q76):(Q96)',
            64: 'X(Q77):(Q97)',
            128: 'Y(Q78):(Q98)',
            256: 'Z(Q79):(Q99)'}
                 
    dmd = ''
    if value&1:
      dmd = dmd + ' ' + axes[1]
    if value&2:
      dmd = dmd + ' ' + axes[2]
    if value&4:
      dmd = dmd + ' ' + axes[4]
    if value&8:
      dmd = dmd + ' ' + axes[8]
    if value&16:
      dmd = dmd + ' ' + axes[16]
    if value&32:
      dmd = dmd + ' ' + axes[32]
    if value&64:
      dmd = dmd + ' ' + axes[64]
    if value&128:
      dmd = dmd + ' ' + axes[128]
    if value&256:
      dmd = dmd + ' ' + axes[256]
              
    return dmd.lstrip(' ')
    
def main():

    f=open('./subroutine_move_axes.pmc', 'w+')
    sys.stdout = f

    print '; Autogenerated by generate_trajectory_scan.py.  DO NOT EDIT this file'
    print '; This file is #included in trajectory_scan.pmc and will be downloaded automatically'
    print '; It cannot be downloaded on its own, as it doesn\'t have the ProgramNum definition'
    print ''
    print 'Open Program ProgramNum'
    print ''
    print 'N108'
    print '    P4500 = P4500 + 1'
    print '    Q71 = Current_A'
    print '    Q91 = A_Vel'
    print '    Q72 = Current_B'
    print '    Q92 = B_Vel'
    print '    Q73 = Current_C'
    print '    Q93 = C_Vel'
    print '    Q74 = Current_U'
    print '    Q94 = U_Vel'
    print '    Q75 = Current_V'
    print '    Q95 = V_Vel'
    print '    Q76 = Current_W'
    print '    Q96 = W_Vel'
    print '    Q77 = Current_X'
    print '    Q97 = X_Vel'
    print '    Q78 = Current_Y'
    print '    Q98 = Y_Vel'
    print '    Q79 = Current_Z'
    print '    Q99 = Z_Vel'

    index = 500
    for value in range(1,512):
        print '    If(Axes=' + str(value) + ')'
        print '        ' + str(generate(value))
        print '    End If'
        index += 1

    print '    TotalPoints = TotalPoints + 1'
    print 'Return'
    print ''
    print 'Close'

    #index = 500;
    #for value in range(1,512):
    #  print 'N' + str(index)
    #  print 'Return'
    #  print ''
    #  index += 1

if __name__ == "__main__":
    main()


