############################################################
#
# Template to distiguish real motor record initiated moves
# from externally generated moves (eg. from a coordinate system motor).
#
###############################################################

#Calculate if a move was internal or not
record(calcout, "$(P)$(M):MR_MIP_INTERNAL") {
  field(DESC, "MR internal")
  field(DTYP, "Soft Channel")
  field(CALC, "(A#0)&&(A#B)")
  field(INPA, "$(P)$(M).MIP CP")
  field(INPB, "32768")
  field(OUT, "$(P)$(M):MR_MIP_INTERNAL_FLAG PP")
  field(DOPT, "Use CALC")
  field(OOPT, "Transition To Non-zero")
}

#Cache the internal move flag
record(bo, "$(P)$(M):MR_MIP_INTERNAL_FLAG") {
  field(DTYP, "Soft Channel")
  field(ZNAM, "External")
  field(ONAM, "Internal")
  field(VAL, "0")
  field(OMSL, "supervisory")
}

#When DMOV = 1 and mip internal flag is set
record(calcout, "$(P)$(M):MR_DMOV") {
  field(DESC, "MR Done")
  field(DTYP, "Soft Channel")
  field(CALC, "(A=1)&&(B=1)")
  field(INPA, "$(P)$(M).DMOV CP")
  field(INPB, "$(P)$(M):MR_MIP_INTERNAL_FLAG")
  field(OUT, "$(P)$(M):MR_MOVE_WRITE.PROC PP")
  field(DOPT, "Use CALC")
  field(OOPT, "Transition To Non-zero")
}

#Write 1 to p47xx
record(longout, "$(P)$(M):MR_MOVE_WRITE") {
  field(DESC, "Motor record move")
  field(DTYP, "asynInt32")
  field(VAL, "1")
  field(OUT, "@asyn($(PORT),0)PMAC_WI_P`4700+$(ADDR)`")
  field(FLNK, "$(P)$(M):MR_RESET_FLAGS")
}

#Reset the internal move flag
record(seq, $(P)$(M):MR_RESET_FLAGS) {
  field(DESC, "Reset MIP flags")
  field(DO1, "0")
  field(LNK1, "$(P)$(M):MR_MIP_INTERNAL_FLAG PP")
}

#calc mres to be written
record(calcout, "$(P)$(M):MRES_CALC") {
  field(CALC, "B?-A*C:A*C")
  field(INPA, "$(P)$(M).MRES CP")
  field(INPB, "$(P)$(M).DIR CP")
  field(INPC, "$(P)$(M):SCALE")
  field(OUT, "$(P)$(M):MRES_SET PP")
  field(OOPT, "When Non-zero")
}

record(ao, "$(P)$(M):MRES_SET") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0)PMAC_WD_P`4800+$(ADDR)`")
  field(FLNK, "$(P)$(M):MR_MOVE_WRITE")
}

#calc off to be written
record(calcout, "$(P)$(M):OFF_SET_CALC") {
  field(CALC, "A")
  field(INPA, "$(P)$(M).OFF CP")
  field(OUT, "$(P)$(M):OFF_SET PP")
}

record(ao, "$(P)$(M):OFF_SET") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0)PMAC_WD_P`4900+$(ADDR)`")
  field(FLNK, "$(P)$(M):MR_MOVE_WRITE")
}


