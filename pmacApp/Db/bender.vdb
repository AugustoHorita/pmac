#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/pmac.dbd")
#! DBDEND


# # \file
# # This template allows setting of variables for a mirror bender with a single
# # actuator. It requiresPROG10_CS_motion.pmc and an instantiation of 
# # CS_bender.pmc with the variables shown in the image below:
# # \image html bender-help.png "Setup of aperture slits in X or Y"
# # Build instructions for an example IOC are available 
# # \ref build_instructions_bender "here", with a pmc file containing 
# # the CS definition available in iocs/bender/defs.pmc
# % macro, __doc__, Supporting template that allows setting of variables for a 
# bender CS 
# % macro, P, Pv Prefix
# % macro, PORT, Motor controller serial port
# % macro, COORD, Co-ordinate system number
# % macro, name, Object name and gui association name
# This associates an edm screen with the template
# % gui, $(name=), edm, bender-mirror.edl, bender=$(P)
record(calc, "$(P):SNG") {
  field(DESC, "Singularity position")
  field(INPA, "$(P):INTERCEPT:RBV")
  field(INPB, "$(P):SLOPE:RBV")
  field(CALC, "-A/B")
  field(PREC, "3")
  field(EGU, "mm")
}

expand("pmacVariableWriteRecords.vdb", pmacVariableWriteRecords) {
  macro(VAR, "&$(COORD)Q20")
  macro(Q, ":SLOPE")
  macro(EGU, "1/Km/mm")
  macro(PREC, "6")
}

expand("pmacVariableWriteRecords.vdb", pmacVariableWriteRecords2) {
  macro(VAR, "&$(COORD)Q21")
  macro(Q, ":INTERCEPT")
  macro(EGU, "1/Km")
  macro(PREC, "6")
}

expand("pmacVariableWriteRecords.vdb", pmacVariableWriteRecords3) {
  macro(VAR, "&$(COORD)Q22")
  macro(Q, ":LIMIT")
  macro(EGU, "Km")
  macro(PREC, "1")
}

record(calcout, "$(P):SLOPE:SYNC") {
  field(FLNK, "$(P):SNG")
}

record(calcout, "$(P):INTERCEPT:SYNC") {
  field(FLNK, "$(P):SNG")
}

#! Further lines contain data used by VisualDCT
#! View(1649,2032,1.0)
#! Record("$(P):SNG",2040,1820,0,0,"$(P):SNG")
#! Field("$(P):SNG.INPA",16777215,1,"$(P):SNG.INPA")
#! Field("$(P):SNG.INPB",16777215,1,"$(P):SNG.INPB")

#! TemplateInstance("pmacVariableWriteRecords",2020,2140,0,"")
#! TemplateField("pmacVariableWriteRecords","VAR",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords","EGU",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords","Q",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords","PORT",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords","P",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords","PREC",16777215,0,1)


#! TemplateInstance("pmacVariableWriteRecords2",2240,2140,0,"")
#! TemplateField("pmacVariableWriteRecords2","VAR",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords2","EGU",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords2","Q",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords2","PORT",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords2","P",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords2","PREC",16777215,0,1)


#! TemplateInstance("pmacVariableWriteRecords3",2460,2140,0,"")
#! TemplateField("pmacVariableWriteRecords3","VAR",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords3","EGU",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords3","Q",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords3","PORT",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords3","P",16777215,0,1)
#! TemplateField("pmacVariableWriteRecords3","PREC",16777215,0,1)

#! Record("$(P):SLOPE:SYNC",1740,1850,0,0,"$(P):SLOPE:SYNC")
#! Field("$(P):SLOPE:SYNC.FLNK",16777215,1,"$(P):SLOPE:SYNC.FLNK")
#! Link("$(P):SLOPE:SYNC.FLNK","$(P):SNG")
#! Record("$(P):INTERCEPT:SYNC",1740,1970,0,0,"$(P):INTERCEPT:SYNC")
#! Field("$(P):INTERCEPT:SYNC.FLNK",16777215,1,"$(P):INTERCEPT:SYNC.FLNK")
#! Link("$(P):INTERCEPT:SYNC.FLNK","$(P):SNG")
